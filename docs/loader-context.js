{
    version: 2,
    emitWarning: [Function: emitWarning],
    emitError: [Function: emitError],
    getLogger: [Function: getLogger],
    exec: [Function: exec],
    resolve: [Function: resolve],
    getResolve: [Function: getResolve],
    emitFile: [Function: emitFile],
    rootContext: 'E:\\0-前端\\00-框架\\webpack\\hand',   
    webpack: true,
    sourceMap: false,
    mode: 'development',
    _module: NormalModule {
      dependencies: [],
      blocks: [],
      variables: [],
      type: 'javascript/auto',
      context: 'E:\\0-前端\\00-框架\\webpack\\hand\\src',
      debugId: 1001,
      hash: undefined,
      renderedHash: undefined,
      resolveOptions: {},
      factoryMeta: {},
      warnings: [],
      errors: [],
      buildMeta: {},
      buildInfo: {
        cacheable: false,
        fileDependencies: Set {},
        contextDependencies: Set {},
        assets: undefined,
        assetsInfo: undefined
      },
      reasons: [ [ModuleReason] ],
      _chunks: SortableSet [Set] {
        _sortFn: [Function: sortById],
        _lastActiveSortFn: null,
        _cache: undefined,
        _cacheOrderIndependent: undefined
      },
      id: null,
      index: null,
      index2: null,
      depth: null,
      issuer: null,
      profile: undefined,
      prefetched: false,
      built: true,
      used: null,
      usedExports: null,
      optimizationBailout: [],
      _rewriteChunkInReasons: undefined,
      useSourceMap: false,
      _source: null,
      request: 'E:\\0-前端\\00-框架\\webpack\\hand\\loaders\\babel-loader.js!E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js',
      userRequest: 'E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js',
      rawRequest: './src/index.js',
      binary: false,
      parser: Parser {
        _pluginCompat: [SyncBailHook],
        hooks: [Object],
        options: {},
        sourceType: 'auto',
        scope: undefined,
        state: undefined,
        comments: undefined
      },
      generator: JavascriptGenerator {},
      resource: 'E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js',
      matchResource: undefined,
      loaders: [ [Object] ],
      error: null,
      _sourceSize: null,
      _buildHash: '',
      buildTimestamp: 1595911451824,
      _cachedSources: Map {},
      lineToLine: false,
      _lastSuccessfulBuildMeta: {},
      _ast: null
    },
    _compilation: Compilation {
      _pluginCompat: SyncBailHook {
        _args: [Array],
        taps: [Array],
        interceptors: [],
        call: [Function: lazyCompileHook],
        promise: [Function: lazyCompileHook],
        callAsync: [Function: lazyCompileHook],
        _x: undefined
      },
      hooks: {
        buildModule: [SyncHook],
        rebuildModule: [SyncHook],
        failedModule: [SyncHook],
        succeedModule: [SyncHook],
        addEntry: [SyncHook],
        failedEntry: [SyncHook],
        succeedEntry: [SyncHook],
        dependencyReference: [SyncWaterfallHook],
        finishModules: [AsyncSeriesHook],
        finishRebuildingModule: [SyncHook],
        unseal: [SyncHook],
        seal: [SyncHook],
        beforeChunks: [SyncHook],
        afterChunks: [SyncHook],
        optimizeDependenciesBasic: [SyncBailHook],
        optimizeDependencies: [SyncBailHook],
        optimizeDependenciesAdvanced: [SyncBailHook],
        afterOptimizeDependencies: [SyncHook],
        optimize: [SyncHook],
        optimizeModulesBasic: [SyncBailHook],
        optimizeModules: [SyncBailHook],
        optimizeModulesAdvanced: [SyncBailHook],
        afterOptimizeModules: [SyncHook],
        optimizeChunksBasic: [SyncBailHook],
        optimizeChunks: [SyncBailHook],
        optimizeChunksAdvanced: [SyncBailHook],
        afterOptimizeChunks: [SyncHook],
        optimizeTree: [AsyncSeriesHook],
        afterOptimizeTree: [SyncHook],
        optimizeChunkModulesBasic: [SyncBailHook],
        optimizeChunkModules: [SyncBailHook],
        optimizeChunkModulesAdvanced: [SyncBailHook],
        afterOptimizeChunkModules: [SyncHook],
        shouldRecord: [SyncBailHook],
        reviveModules: [SyncHook],
        optimizeModuleOrder: [SyncHook],
        advancedOptimizeModuleOrder: [SyncHook],
        beforeModuleIds: [SyncHook],
        moduleIds: [SyncHook],
        optimizeModuleIds: [SyncHook],
        afterOptimizeModuleIds: [SyncHook],
        reviveChunks: [SyncHook],
        optimizeChunkOrder: [SyncHook],
        beforeChunkIds: [SyncHook],
        optimizeChunkIds: [SyncHook],
        afterOptimizeChunkIds: [SyncHook],
        recordModules: [SyncHook],
        recordChunks: [SyncHook],
        beforeHash: [SyncHook],
        contentHash: [SyncHook],
        afterHash: [SyncHook],
        recordHash: [SyncHook],
        record: [SyncHook],
        beforeModuleAssets: [SyncHook],
        shouldGenerateChunkAssets: [SyncBailHook],
        beforeChunkAssets: [SyncHook],
        additionalChunkAssets: [SyncHook],
        additionalAssets: [AsyncSeriesHook],
        optimizeChunkAssets: [AsyncSeriesHook],
        afterOptimizeChunkAssets: [SyncHook],
        optimizeAssets: [AsyncSeriesHook],
        afterOptimizeAssets: [SyncHook],
        needAdditionalSeal: [SyncBailHook],
        afterSeal: [AsyncSeriesHook],
        chunkHash: [SyncHook],
        moduleAsset: [SyncHook],
        chunkAsset: [SyncHook],
        assetPath: [SyncWaterfallHook],
        needAdditionalPass: [SyncBailHook],
        childCompiler: [SyncHook],
        log: [SyncBailHook],
        normalModuleLoader: [SyncHook],
        optimizeExtractedChunksBasic: [SyncBailHook],
        optimizeExtractedChunks: [SyncBailHook],
        optimizeExtractedChunksAdvanced: [SyncBailHook],
        afterOptimizeExtractedChunks: [SyncHook]
      },
      name: undefined,
      compiler: Compiler {
        _pluginCompat: [SyncBailHook],
        hooks: [Object],
        name: undefined,
        parentCompilation: undefined,
        outputPath: 'E:\\0-前端\\00-框架\\webpack\\hand\\dist',
        outputFileSystem: [NodeOutputFileSystem],
        inputFileSystem: [CachedInputFileSystem],
        recordsInputPath: undefined,
        recordsOutputPath: undefined,
        records: [Object],
        removedFiles: Set {},
        fileTimestamps: Map {},
        contextTimestamps: Map {},
        resolverFactory: [ResolverFactory],
        infrastructureLogger: [Function: logger],
        resolvers: [Object],
        options: [Object],
        context: 'E:\\0-前端\\00-框架\\webpack\\hand',
        requestShortener: [RequestShortener],
        running: true,
        watchMode: false,
        _assetEmittingSourceCache: [WeakMap],
        _assetEmittingWrittenFiles: Map {},
        watchFileSystem: [NodeWatchFileSystem],
        dependencies: undefined
      },
      resolverFactory: ResolverFactory {
        _pluginCompat: [SyncBailHook],
        hooks: [Object],
        cache2: [Map]
      },
      inputFileSystem: CachedInputFileSystem {
        fileSystem: NodeJsInputFileSystem {},
        _statStorage: [Storage],
        _readdirStorage: [Storage],
        _readFileStorage: [Storage],
        _readJsonStorage: [Storage],
        _readlinkStorage: [Storage],
        _stat: [Function: bound bound ],
        _statSync: [Function: bound bound ],
        _readdir: [Function: bound readdir],
        _readdirSync: [Function: bound readdirSync],
        _readFile: [Function: bound bound readFile],
        _readFileSync: [Function: bound bound readFileSync],
        _readJson: [Function],
        _readJsonSync: [Function],
        _readlink: [Function: bound bound readlink],
        _readlinkSync: [Function: bound bound readlinkSync]
      },
      requestShortener: RequestShortener {
        currentDirectoryRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\/hand/g,
        parentDirectoryRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\//g,
        buildinsAsModule: true,
        buildinsRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\/hand\/node_modules\/webpack/g,
        cache: Map {}
      },
      options: {
        context: 'E:\\0-前端\\00-框架\\webpack\\hand',
        entry: [Object],
        output: [Object],
        mode: 'development',
        devtool: 'none',
        plugins: [Array],
        module: [Object],
        resolveLoader: [Object],
        cache: true,
        target: 'web',
        node: [Object],
        performance: false,
        optimization: [Object],
        resolve: [Object],
        infrastructureLogging: [Object]
      },
      outputOptions: {
        path: 'E:\\0-前端\\00-框架\\webpack\\hand\\dist',
        filename: '[id].js',
        chunkFilename: '[id].js',
        webassemblyModuleFilename: '[modulehash].module.wasm',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        chunkCallbackName: 'webpackChunk',
        globalObject: 'window',
        devtoolNamespace: '',
        libraryTarget: 'var',
        pathinfo: true,
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        jsonpScriptType: false,
        chunkLoadTimeout: 120000,
        hashFunction: 'md4',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false
      },
      bail: undefined,
      profile: undefined,
      performance: false,
      mainTemplate: MainTemplate {
        _pluginCompat: [SyncBailHook],
        outputOptions: [Object],
        hooks: [Object],
        requireFn: '__webpack_require__'
      },
      chunkTemplate: ChunkTemplate {
        _pluginCompat: [SyncBailHook],
        outputOptions: [Object],
        hooks: [Object]
      },
      hotUpdateChunkTemplate: HotUpdateChunkTemplate {
        _pluginCompat: [SyncBailHook],
        outputOptions: [Object],
        hooks: [Object]
      },
      runtimeTemplate: RuntimeTemplate {
        outputOptions: [Object],
        requestShortener: [RequestShortener]
      },
      moduleTemplates: { javascript: [ModuleTemplate], webassembly: [ModuleTemplate] },
      semaphore: Semaphore {
        available: 99,
        waiters: [],
        _continue: [Function: bound _continue]
      },
      entries: [ [NormalModule] ],
      _preparedEntrypoints: [ [Object] ],
      entrypoints: Map {},
      chunks: [],
      chunkGroups: [],
      namedChunkGroups: Map {},
      namedChunks: Map {},
      modules: [ [NormalModule] ],
      _modules: Map {
        'E:\\0-前端\\00-框架\\webpack\\hand\\loaders\\babel-loader.js!E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js' => [NormalModule]
      },
      cache: {
        children: [Object],
        'mE:\\0-前端\\00-框架\\webpack\\hand\\loaders\\babel-loader.js!E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js': [NormalModule]
      },
      records: { HtmlWebpackCompiler: [Array] },
      additionalChunkAssets: [],
      assets: {},
      assetsInfo: Map { '__child-HtmlWebpackPlugin_0' => {} },
      errors: [],
      warnings: [],
      children: [ [Compilation] ],
      logging: Map {},
      dependencyFactories: Map {
        [Function: WebAssemblyImportDependency] => [NormalModuleFactory],
        [Function: WebAssemblyExportImportedDependency] => [NormalModuleFactory],
        [Function: SingleEntryDependency] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => [ContextModuleFactory],
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function] => [NormalModuleFactory],
        [Function] => [ContextModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => [ContextModuleFactory],
        [Function] => NullFactory {},
        [Function] => NullFactory {},
        [Function: LoaderDependency] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => NullFactory {},
        [Function] => [ContextModuleFactory],
        [Function: ContextElementDependency] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => [NormalModuleFactory],
        [Function] => [ContextModuleFactory]
      },
      dependencyTemplates: Map {
        'hash' => '',
        [Function] => ConstDependencyTemplate {},
        [Function] => HarmonyExportDependencyTemplate {},
        [Function] => HarmonyInitDependencyTemplate {},
        [Function] => HarmonyImportSideEffectDependencyTemplate {},
        [Function] => HarmonyImportSpecifierDependencyTemplate {},
        [Function] => HarmonyExportDependencyTemplate {},
        [Function] => HarmonyExportDependencyTemplate {},
        [Function] => HarmonyExportSpecifierDependencyTemplate {},
        [Function] => HarmonyExportImportedSpecifierDependencyTemplate {},
        [Function] => HarmonyAcceptDependencyTemplate {},
        [Function] => HarmonyAcceptImportDependencyTemplate {},
        [Function] => AMDRequireDependencyTemplate {},
        [Function] => ModuleDependencyTemplateAsRequireId {},
        [Function] => AMDRequireArrayDependencyTemplate {},
        [Function] => ContextDependencyTemplateAsRequireCall {},
        [Function] => AMDDefineDependencyTemplate {},
        [Function] => UnsupportedDependencyTemplate {},
        [Function] => LocalModuleDependencyTemplate {},
        [Function] => ModuleDependencyTemplateAsId {},
        [Function] => ContextDependencyTemplateAsRequireCall {},
        [Function] => ModuleDependencyTemplateAsId {},
        [Function] => ContextDependencyTemplateAsId {},
        [Function] => RequireResolveHeaderDependencyTemplate {},
        [Function] => RequireHeaderDependencyTemplate {},
        [Function] => RequireIncludeDependencyTemplate {},
        [Function] => NullDependencyTemplate {},
        [Function] => RequireEnsureDependencyTemplate {},
        [Function] => ModuleDependencyTemplateAsRequireId {},
        [Function] => ImportDependencyTemplate {},
        [Function] => ImportEagerDependencyTemplate {},
        [Function] => ImportDependencyTemplate {},
        [Function] => ContextDependencyTemplateAsRequireCall {}
      },
      childrenCounters: { HtmlWebpackCompiler: 1 },
      usedChunkIds: null,
      usedModuleIds: null,
      fileTimestamps: Map {},
      contextTimestamps: Map {},
      compilationDependencies: Set {},
      _buildingModules: Map { [NormalModule] => [Array] },
      _rebuildingModules: Map {},
      emittedAssets: Set {}
    },
    _compiler: Compiler {
      _pluginCompat: SyncBailHook {
        _args: [Array],
        taps: [Array],
        interceptors: [],
        call: [Function: lazyCompileHook],
        promise: [Function: lazyCompileHook],
        callAsync: [Function: lazyCompileHook],
        _x: undefined
      },
      hooks: {
        shouldEmit: [SyncBailHook],
        done: [AsyncSeriesHook],
        additionalPass: [AsyncSeriesHook],
        beforeRun: [AsyncSeriesHook],
        run: [AsyncSeriesHook],
        emit: [AsyncSeriesHook],
        assetEmitted: [AsyncSeriesHook],
        afterEmit: [AsyncSeriesHook],
        thisCompilation: [SyncHook],
        compilation: [SyncHook],
        normalModuleFactory: [SyncHook],
        contextModuleFactory: [SyncHook],
        beforeCompile: [AsyncSeriesHook],
        compile: [SyncHook],
        make: [AsyncParallelHook],
        afterCompile: [AsyncSeriesHook],
        watchRun: [AsyncSeriesHook],
        failed: [SyncHook],
        invalid: [SyncHook],
        watchClose: [SyncHook],
        infrastructureLog: [SyncBailHook],
        environment: [SyncHook],
        afterEnvironment: [SyncHook],
        afterPlugins: [SyncHook],
        afterResolvers: [SyncHook],
        entryOption: [SyncBailHook],
        infrastructurelog: [SyncBailHook]
      },
      name: undefined,
      parentCompilation: undefined,
      outputPath: 'E:\\0-前端\\00-框架\\webpack\\hand\\dist',
      outputFileSystem: NodeOutputFileSystem {
        mkdirp: [Function],
        mkdir: [Function: bound mkdir],
        rmdir: [Function: bound rmdir],
        unlink: [Function: bound unlink],
        writeFile: [Function: bound writeFile],
        join: [Function: bound join]
      },
      inputFileSystem: CachedInputFileSystem {
        fileSystem: NodeJsInputFileSystem {},
        _statStorage: [Storage],
        _readdirStorage: [Storage],
        _readFileStorage: [Storage],
        _readJsonStorage: [Storage],
        _readlinkStorage: [Storage],
        _stat: [Function: bound bound ],
        _statSync: [Function: bound bound ],
        _readdir: [Function: bound readdir],
        _readdirSync: [Function: bound readdirSync],
        _readFile: [Function: bound bound readFile],
        _readFileSync: [Function: bound bound readFileSync],
        _readJson: [Function],
        _readJsonSync: [Function],
        _readlink: [Function: bound bound readlink],
        _readlinkSync: [Function: bound bound readlinkSync]
      },
      recordsInputPath: undefined,
      recordsOutputPath: undefined,
      records: { HtmlWebpackCompiler: [Array] },
      removedFiles: Set {},
      fileTimestamps: Map {},
      contextTimestamps: Map {},
      resolverFactory: ResolverFactory {
        _pluginCompat: [SyncBailHook],
        hooks: [Object],
        cache2: [Map]
      },
      infrastructureLogger: [Function: logger],
      resolvers: { normal: [Object], loader: [Object], context: [Object] },
      options: {
        context: 'E:\\0-前端\\00-框架\\webpack\\hand',
        entry: [Object],
        output: [Object],
        mode: 'development',
        devtool: 'none',
        plugins: [Array],
        module: [Object],
        resolveLoader: [Object],
        cache: true,
        target: 'web',
        node: [Object],
        performance: false,
        optimization: [Object],
        resolve: [Object],
        infrastructureLogging: [Object]
      },
      context: 'E:\\0-前端\\00-框架\\webpack\\hand',
      requestShortener: RequestShortener {
        currentDirectoryRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\/hand/g,
        parentDirectoryRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\//g,
        buildinsAsModule: true,
        buildinsRegExp: /(^|!)E:\/0\-前端\/00\-框架\/webpack\/hand\/node_modules\/webpack/g,
        cache: Map {}
      },
      running: true,
      watchMode: false,
      _assetEmittingSourceCache: WeakMap { <items unknown> },
      _assetEmittingWrittenFiles: Map {},
      watchFileSystem: NodeWatchFileSystem {
        inputFileSystem: [CachedInputFileSystem],
        watcherOptions: [Object],
        watcher: [EventEmitter]
      },
      dependencies: undefined
    },
    fs: CachedInputFileSystem {
      fileSystem: NodeJsInputFileSystem {},
      _statStorage: Storage {
        duration: 60000,
        running: Map {},
        data: [Map],
        levels: [Array],
        count: 4,
        interval: Timeout {
          _idleTimeout: 530,
          _idlePrev: [TimersList],
          _idleNext: [Timeout],
          _idleStart: 1323,
          _onTimeout: [Function: bound tick],
          _timerArgs: undefined,
          _repeat: 530,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 30
        },
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound tick]
      },
      _readdirStorage: Storage {
        duration: 60000,
        running: Map {},
        data: Map {},
        levels: [Array],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound tick]
      },
      _readFileStorage: Storage {
        duration: 60000,
        running: Map {},
        data: [Map],
        levels: [Array],
        count: 12,
        interval: Timeout {
          _idleTimeout: 530,
          _idlePrev: [Timeout],
          _idleNext: [TimersList],
          _idleStart: 1314,
          _onTimeout: [Function: bound tick],
          _timerArgs: undefined,
          _repeat: 530,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(asyncId)]: 9,
          [Symbol(triggerId)]: 8
        },
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound tick]
      },
      _readJsonStorage: Storage {
        duration: 60000,
        running: Map {},
        data: [Map],
        levels: [Array],
        count: 10,
        interval: Timeout {
          _idleTimeout: 530,
          _idlePrev: [Timeout],
          _idleNext: [Timeout],
          _idleStart: 1315,
          _onTimeout: [Function: bound tick],
          _timerArgs: undefined,
          _repeat: 530,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(asyncId)]: 10,
          [Symbol(triggerId)]: 8
        },
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound tick]
      },
      _readlinkStorage: Storage {
        duration: 60000,
        running: Map {},
        data: [Map],
        levels: [Array],
        count: 15,
        interval: Timeout {
          _idleTimeout: 530,
          _idlePrev: [Timeout],
          _idleNext: [Timeout],
          _idleStart: 1322,
          _onTimeout: [Function: bound tick],
          _timerArgs: undefined,
          _repeat: 530,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(asyncId)]: 29,
          [Symbol(triggerId)]: 20
        },
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound tick]
      },
      _stat: [Function: bound bound ],
      _statSync: [Function: bound bound ],
      _readdir: [Function: bound readdir],
      _readdirSync: [Function: bound readdirSync],
      _readFile: [Function: bound bound readFile],
      _readFileSync: [Function: bound bound readFileSync],
      _readJson: [Function],
      _readJsonSync: [Function],
      _readlink: [Function: bound bound readlink],
      _readlinkSync: [Function: bound bound readlinkSync]
    },
    target: 'web',
    loadModule: [Function],
    context: 'E:\\0-前端\\00-框架\\webpack\\hand\\src',
    loaderIndex: 0,
    loaders: [
      {
        path: 'E:\\0-前端\\00-框架\\webpack\\hand\\loaders\\babel-loader.js',
        query: '',
        options: undefined,
        ident: undefined,
        normal: [Function: loader],
        pitch: undefined,
        raw: undefined,
        data: null,
        pitchExecuted: true,
        normalExecuted: true,
        request: [Getter/Setter]
      }
    ],
    resourcePath: 'E:\\0-前端\\00-框架\\webpack\\hand\\src\\index.js',
    resourceQuery: '',
    async: [Function: async],
    callback: [Function],
    cacheable: [Function: cacheable],
    addDependency: [Function: addDependency],
    dependency: [Function: addDependency],
    addContextDependency: [Function: addContextDependency],
    getDependencies: [Function: getDependencies],
    getContextDependencies: [Function: getContextDependencies],
    clearDependencies: [Function: clearDependencies],
    resource: [Getter/Setter],
    request: [Getter],
    remainingRequest: [Getter],
    currentRequest: [Getter],
    previousRequest: [Getter],
    query: [Getter],
    data: [Getter]
  }